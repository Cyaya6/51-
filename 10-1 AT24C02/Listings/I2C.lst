C51 COMPILER V9.54   I2C                                                                   10/15/2022 20:35:12 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE I2C
OBJECT MODULE PLACED IN .\Objects\I2C.obj
COMPILER INVOKED BY: E:\learning_51\keil5\C51\BIN\C51.EXE I2C.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\List
                    -ings\I2C.lst) TABS(2) OBJECT(.\Objects\I2C.obj)

line level    source

   1          #include <REGX52.H>
   2          
   3          sbit I2C_SCL=P2^1;
   4          sbit I2C_SDA=P2^0;
   5          
   6          /**
   7            * @brief I2C开始函数 发送开始信号
   8            * @param  无 
   9            * @retval 无
  10            */
  11          void I2C_Start()
  12          {
  13   1        I2C_SDA=1;
  14   1        I2C_SCL=1;
  15   1        
  16   1        I2C_SDA=0;
  17   1        I2C_SCL=0;
  18   1      }
  19          
  20          /**
  21            * @brief I2C停止函数 发送停止信号
  22            * @param  无
  23            * @retval 无
  24            */
  25          void I2C_Stop()
  26          {
  27   1        I2C_SDA=0;
  28   1        
  29   1        I2C_SCL=1;
  30   1        I2C_SDA=1;  
  31   1      }
  32          /**
  33            * @brief I2C发送一个字节  用于发送一个八位数据
  34            * @param  byte 要发送的八位数据
  35            * @retval 无
  36            */
  37          void I2C_SendByte(unsigned char byte)
  38          {
  39   1        unsigned char i;
  40   1        for(i=0;i<8;i++)
  41   1        {
  42   2        I2C_SDA=byte&(0x80>>i);
  43   2        I2C_SCL=1;
  44   2        I2C_SCL=0;
  45   2        }
  46   1        
  47   1      }
  48          /**
  49            * @brief I2C接收函数 用于接收一个八位数据
  50            * @param  无
  51            * @retval 返回接收道德八位数据
  52            */
  53          unsigned char I2C_ReceiveByte()
  54          {
C51 COMPILER V9.54   I2C                                                                   10/15/2022 20:35:12 PAGE 2   

  55   1        unsigned char i,byte=0x00;
  56   1        I2C_SDA=1;
  57   1        
  58   1        for(i=0;i<8;i++)
  59   1        {
  60   2          I2C_SCL=1;
  61   2        if(I2C_SDA==1)
  62   2        {
  63   3          byte|=(0x80>>i);
  64   3        }
  65   2        I2C_SCL=0;
  66   2        }
  67   1        
  68   1        return byte;
  69   1      }
  70          
  71          /**
  72            * @brief I2C发送应答函数 发送一个ACK信号
  73            * @param  ACK 应答位 0为应答，1为非应答
  74            * @retval 无
  75            */
  76          void I2C_SendAck(unsigned char ACK)
  77          {
  78   1        I2C_SDA=ACK;
  79   1        
  80   1        I2C_SCL=1;
  81   1        I2C_SCL=0;
  82   1      }
  83          /**
  84            * @brief I2C接收应答
  85            * @param  无
  86            * @retval 接收到的应答位
  87            */
  88          unsigned char I2C_ReceiveACK()
  89          {
  90   1        unsigned char AckBit;
  91   1        
  92   1        I2C_SDA=1;
  93   1        I2C_SCL=1;  
  94   1        AckBit=I2C_SDA;
  95   1        I2C_SCL=0;
  96   1        return AckBit;
  97   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    109    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
