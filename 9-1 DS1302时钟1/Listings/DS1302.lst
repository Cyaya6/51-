C51 COMPILER V9.54   DS1302                                                                10/12/2022 16:06:56 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE DS1302
OBJECT MODULE PLACED IN .\Objects\DS1302.obj
COMPILER INVOKED BY: E:\learning_51\keil5\C51\BIN\C51.EXE DS1302.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\L
                    -istings\DS1302.lst) TABS(2) OBJECT(.\Objects\DS1302.obj)

line level    source

   1          #include <REGX52.H>
   2          
   3          sbit DS1302_SCLK=P3^6;
   4          sbit DS1302_IO=P3^4;
   5          sbit DS1302_CE=P3^5;
   6          
   7          #define DS1302_SECOND_WRITE  0x80     //秒
   8          #define DS1302_SECOND_READ   0x81  
   9          #define DS1302_MIN_WRITE     0x82   //分
  10          #define DS1302_MIN_READ      0x83
  11          #define DS1302_HOUR_WRITE    0x84   //时
  12          #define DS1302_HOUR_READ     0x85
  13          #define DS1302_DATE_WRITE    0x86   //日
  14          #define DS1302_DATE_READ     0x87
  15          #define DS1302_MONTH_WRITE   0x88   //月
  16          #define DS1302_MONTH_READ    0x89
  17          #define DS1302_DAY_WRITE     0x8A   //星期几
  18          #define DS1302_DAY_READ      0x8B
  19          #define DS1302_YEAR_WRITE    0x8C //年
  20          #define DS1302_YEAR_READ     0x8D
  21          #define DS1302_WP            0x8E   //写入保护
  22          
  23          unsigned char DS1302Time[]={22,10,12,16,05,55,3};   //2022-10-10-16:59-3week
  24          
  25          void DS1302_Init()
  26          {
  27   1        DS1302_CE=0;
  28   1        DS1302_SCLK=0;
  29   1      }
  30          
  31          void DS1302_WriteByte(unsigned char command,unsigned char Data)  //命令字  数据 写操作
  32          {
  33   1        unsigned char i;
  34   1        DS1302_CE=1;  //CE置1 可以读取数据
  35   1        
  36   1        for(i=0;i<8;i++)  //将command的八位都读进IO口
  37   1        {
  38   2        DS1302_IO=(command&0x01<<i);  //取出command的第一位
  39   2        DS1302_SCLK=1;   //一个上升沿
  40   2        DS1302_SCLK=0;
  41   2        }
  42   1        
  43   1        for(i=0;i<8;i++)  //将Data的八位都读进IO口
  44   1        {
  45   2        DS1302_IO=(Data&0x01<<i);  //取出command的第一位
  46   2        DS1302_SCLK=1;   //一个上升沿
  47   2        DS1302_SCLK=0;
  48   2        }
  49   1        
  50   1        DS1302_CE=0;  //读取数据完成  
  51   1      }
  52          
  53          
  54          unsigned char DS1302_ReadByte(unsigned char command)//读操作
C51 COMPILER V9.54   DS1302                                                                10/12/2022 16:06:56 PAGE 2   

  55          {
  56   1        unsigned char i,Data=0x00;
  57   1        DS1302_CE=1;  //CE置1 可以读取数据
  58   1        //command|=0x01;  //读到的命令 最后一位置1 也就是直接
  59   1        for(i=0;i<8;i++)  //将command的八位都读进IO口
  60   1        {
  61   2        DS1302_IO=command&(0x01<<i);  //取出command的第一位
  62   2        DS1302_SCLK=0;  //改变电平状态
  63   2        DS1302_SCLK=1;
  64   2        }
  65   1        
  66   1        //读取DS1302里的数据，输出给IO口
  67   1        for(i=0;i<8;i++)
  68   1        {
  69   2        DS1302_SCLK=1;  //改变电平状态
  70   2        DS1302_SCLK=0;
  71   2        if(DS1302_IO){Data|=(0x01<<i);}
  72   2        }
  73   1        DS1302_CE=0;
  74   1        DS1302_IO=0;  //读取后将IO设置为0，否则读出的数据会出错
  75   1        return Data;
  76   1      }
  77          
  78          void DS1302_SetTime()
  79          {
  80   1        DS1302_WriteByte(DS1302_WP,0x00);  
  81   1        //解除芯片写入保护  如果读出时间为一个大于59并且不动的数，芯片很有可能处
             -于写保护状态
  82   1        DS1302_WriteByte(DS1302_DAY_WRITE,DS1302Time[6]/10*16+DS1302Time[6]%10);  //读取的是BCD码
  83   1        DS1302_WriteByte(DS1302_SECOND_WRITE,DS1302Time[5]/10*16+DS1302Time[5]%10);
  84   1        DS1302_WriteByte(DS1302_MIN_WRITE,DS1302Time[4]/10*16+DS1302Time[4]%10);
  85   1        DS1302_WriteByte(DS1302_HOUR_WRITE,DS1302Time[3]/10*16+DS1302Time[3]%10);
  86   1        DS1302_WriteByte(DS1302_DATE_WRITE,DS1302Time[2]/10*16+DS1302Time[2]%10);
  87   1        DS1302_WriteByte(DS1302_MONTH_WRITE,DS1302Time[1]/10*16+DS1302Time[1]%10);
  88   1        DS1302_WriteByte(DS1302_YEAR_WRITE,DS1302Time[0]/10*16+DS1302Time[0]%10);
  89   1        DS1302_WriteByte(DS1302_WP,0x80);
  90   1        
  91   1        /*
  92   1        DS1302_WriteByte(0x8E,0x00);  //解除芯片写入保护  如果读出时间为一个大于59并且不动
             -的数，芯片很有可能处于写保护状态
  93   1        DS1302_WriteByte(0x80,0x55);  //对秒进行写入
  94   1        //写入的数是以bcd码来进位 最后显示时会转换为十进制  0000 1001  9 -> 0001 0000 10(d)
             -  ->16
  95   1        DS1302_WriteByte(0x82,0x59);  //对分钟进行写入
  96   1        DS1302_WriteByte(0x84,0x08);  //对小时进行写入
  97   1        */
  98   1      }
  99          
 100          void DS1302_ReadTime()
 101          {
 102   1        unsigned char temp;
 103   1        
 104   1        temp=DS1302_ReadByte(DS1302_YEAR_READ);
 105   1        DS1302Time[0]=temp/16*10+temp%16;
 106   1        
 107   1        temp=DS1302_ReadByte(DS1302_MONTH_READ);
 108   1        DS1302Time[1]=temp/16*10+temp%16;
 109   1        
 110   1        temp=DS1302_ReadByte(DS1302_DATE_READ);
 111   1        DS1302Time[2]=temp/16*10+temp%16;
 112   1        
 113   1        temp=DS1302_ReadByte(DS1302_HOUR_READ);
C51 COMPILER V9.54   DS1302                                                                10/12/2022 16:06:56 PAGE 3   

 114   1        DS1302Time[3]=temp/16*10+temp%16;
 115   1        
 116   1        temp=DS1302_ReadByte(DS1302_MIN_READ);
 117   1        DS1302Time[4]=temp/16*10+temp%16;
 118   1        
 119   1        temp=DS1302_ReadByte(DS1302_SECOND_READ);
 120   1        DS1302Time[5]=temp/16*10+temp%16;
 121   1        
 122   1        temp=DS1302_ReadByte(DS1302_DAY_READ);
 123   1        DS1302Time[6]=temp/16*10+temp%16;
 124   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    488    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      7    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
