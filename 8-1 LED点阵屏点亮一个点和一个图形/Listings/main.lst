C51 COMPILER V9.54   MAIN                                                                  10/05/2022 22:41:56 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: E:\learning_51\keil5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Lis
                    -tings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <REGX52.H>
   2          #include "Delay.h"
   3          //定义74HC595 控制管脚
   4          sbit RCK=P3^5;  //存储寄存器时钟输入  RCLK
   5          sbit SCK=P3^6;  //移位寄存器时钟输入  SRCLK
   6          sbit SER=P3^4;  //串行数据输入
   7          
   8          //笑脸的行数据
   9          //unsigned char rowArray[]={0x3C,0x42,0xA9,0x85,0x85,0xA9,0x42,0x3E};
  10          //unsigned char columnArray[]={0x3C,0x42,0xA5,0x81,0xA5,0x99,0x43,0x3C};
  11          
  12          void _74H595_WriteByte(unsigned char byte)  //向74H595中写入一个字节的数据
  13          {
  14   1      //  SER=0x80;   //1000 0000 串行输入一个数据 最低位置1
  15   1      //  SCK=1;
  16   1      //  SCk=0;
  17   1        unsigned char i;
  18   1        for(i=0;i<8;i++)
  19   1        {
  20   2          SER=byte&(0x80>>i);    //逐步向右移位  0x40 0x20
  21   2          SCK=1;   //上升沿
  22   2          SCK=0;
  23   2        }
  24   1        RCK=1;
  25   1        RCK=0;  //存储寄存器时钟上升沿将前面写入到寄存器的数据输出
  26   1      }
  27          
  28          void MatrixLed_ShowColumn(unsigned char row,column)
  29          {
  30   1        _74H595_WriteByte(row);  //控制行
  31   1        //if(column==0)   {P0=~0x80};  后面依次递增
  32   1        P0=~(0x80>>column);  //控制列  
  33   1        Delay(1);
  34   1        P0=0xFF;
  35   1      }
  36          
  37          void main()
  38          {
  39   1        SCK=0;
  40   1        RCK=0;
  41   1        
  42   1        while(1)
  43   1        {
  44   2          //笑脸
  45   2      //    MatrixLed_ShowColumn(0x3C,0);
  46   2      //    MatrixLed_ShowColumn(0x42,1);
  47   2      //    MatrixLed_ShowColumn(0xA9,2);
  48   2      //    MatrixLed_ShowColumn(0x85,3);
  49   2      //    MatrixLed_ShowColumn(0x85,4);
  50   2      //    MatrixLed_ShowColumn(0xA9,5);
  51   2      //    MatrixLed_ShowColumn(0x42,6);
  52   2      //    MatrixLed_ShowColumn(0x3C,7);
  53   2          
  54   2          //爱心
C51 COMPILER V9.54   MAIN                                                                  10/05/2022 22:41:56 PAGE 2   

  55   2          MatrixLed_ShowColumn(0x38,0);
  56   2          MatrixLed_ShowColumn(0x7C,1);
  57   2          MatrixLed_ShowColumn(0x3E,2);
  58   2          MatrixLed_ShowColumn(0x1F,3);
  59   2          MatrixLed_ShowColumn(0x1F,4);
  60   2          MatrixLed_ShowColumn(0x3E,5);
  61   2          MatrixLed_ShowColumn(0x7C,6);
  62   2          MatrixLed_ShowColumn(0x38,7);
  63   2        }
  64   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    154    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
